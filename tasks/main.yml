---
# tasks file for nextcloud
#TODO depend on a separate PHP installation role?
- name: Make sure the right group exists
  group:
    name: "{{ app__nextcloud__group }}"
    system: yes

- name: Make sure the right user exists
  user:
    name: "{{ app__nextcloud__user }}"
    group: "{{ app__nextcloud__group }}"
    system: yes

- name: Check whether it is not installed already
  stat:
    path: "{{ nextcloud__home }}"
  register: nextcloud_stat

- name: Download the package
  environment:
    http_proxy: "{{ http_proxy }}"
  get_url:
    checksum: "{{ nextcloud__checksum }}"
    dest: "{{ nextcloud__home }}.{{ default__nextcloud__archive }}"
    url: "{{ nextcloud__download_upstream }}"
    owner: "{{ app__nextcloud__user }}"
    group: "{{ app__nextcloud__group }}"
    mode: "0644"
  when: not nextcloud_stat.stat.exists

- name: Make sure there is no temporary unpacking directory around
  file:
    path: "{{ nextcloud__home }}-tmp"
    state: absent
  when: not nextcloud_stat.stat.exists

- name: Create the temporary unpacking directory
  file:
    path: "{{ nextcloud__home }}-tmp"
    state: directory
    mode: "0755"
    owner: "{{ app__nextcloud__user }}"
    group: "{{ app__nextcloud__group }}"
  when: not nextcloud_stat.stat.exists

- name: Unpack the archive
  unarchive:
    remote_src: yes
    creates: "{{ nextcloud__home }}/config/config.sample.php"
    dest: "{{ nextcloud__home }}-tmp"
    src: "{{ nextcloud__home }}.{{ default__nextcloud__archive }}"
  when: not nextcloud_stat.stat.exists

- name: Move the installation to its final destination
  command: 'mv {{ nextcloud__home }}-tmp/{{ nextcloud__name }} {{ nextcloud__home }}'
  when: not nextcloud_stat.stat.exists

- name: Clean up the temporary unpacking directory
  file:
    path: "{{ nextcloud__home }}-tmp"
    state: absent
  when: not nextcloud_stat.stat.exists

#TODO Configure
